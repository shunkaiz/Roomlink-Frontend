{"version":3,"sources":["components/Navbar.js","config/constants.js","components/ImageSlider.js","components/Body.js","components/App.js","serviceWorker.js","index.js"],"names":["NavBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleMobileMenuOpen","event","temp","currentTarget","setState","prev","objectSpread","mobileMenuOpen","menuAnchor","handleMobileMenuClose","state","trackerType","classes","mobileMenu","react_default","a","createElement","core_Menu_default","anchorEl","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","MenuItem_default","onClick","Button_default","root","navButtonRoot","label","navButtonLabel","href","formButton","Grid_default","container","direction","justify","alignItems","navBarContainer","className","logoContainer","navLogo","window","location","logoBox","navButtonContainer","navBarButtonMobile","IconButton_default","aria-haspopup","color","Menu_default","Component","withStyles","theme","width","height","defineProperty","margin","breakpoints","up","display","fontSize","marginBottom","textDecoration","borderWidth","borderColor","fontFamily","fontWeight","lineHeight","withTheme","IMAGE_URL","protocol","host","ImageSlider","imageContainer","imageBox","backgroundImage","concat","backgroundSize","Body","openForm","typeformEmbed","typeform","document","getElementsByClassName","style","_this2","react_scrollable_anchor_lib_default","id","formButtonRoot","formButtonLabel","variant","Icon_default","path","mdiLink","size","linkIcon","lib","popup","url","autoOpen","ref","tf","hideHeaders","hideFooter","buttonText","top","placeholder","borderRadius","backgroundColor","pink","&:hover","marginLeft","App","spacing","body","Navbar","components_ImageSlider","components_Body","navBar","themeBar","Boolean","hostname","match","ReactDOM","render","components_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4TA+DMA,cAEF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KAQVQ,qBAAuB,SAACC,GAEpB,IAAIC,EAAOD,EAAME,cACjBV,EAAKW,SAAS,SAAAC,GAAI,OAAAX,OAAAY,EAAA,EAAAZ,CAAA,GACXW,EADW,CAEdE,gBAAgB,EAChBC,WAAYN,OAfFT,EAmBlBgB,sBAAwB,WACpBhB,EAAKW,SAAS,SAAAC,GAAI,OAAAX,OAAAY,EAAA,EAAAZ,CAAA,GACXW,EADW,CAEdE,gBAAgB,EAChBC,WAAY,UArBhBf,EAAKiB,MAAQ,CACTC,YAAa,QACbJ,gBAAgB,EAChBC,WAAY,MALFf,wEA2BV,IACGmB,EAAWhB,KAAKJ,MAAhBoB,QAEDC,EACFC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CACIG,SAAUtB,KAAKc,MAAMF,WACrBW,aAAc,CAAEC,SAAU,MAAOC,WAAY,SAC7CC,gBAAiB,CAAEF,SAAU,MAAOC,WAAY,SAChDE,KAAM3B,KAAKc,MAAMH,eACjBiB,QAAS5B,KAAKa,uBAEdK,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAUW,QAAS9B,KAAKa,uBACpBK,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQH,QAAS,CAACgB,KAAMhB,EAAQiB,cAAeC,MAAOlB,EAAQmB,gBAAiBC,KAAM,KAArF,SAEJlB,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAUW,QAAS9B,KAAKa,uBACpBK,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQH,QAAS,CAACgB,KAAMhB,EAAQiB,cAAeC,MAAOlB,EAAQmB,gBAAiBC,KAAM,KAArF,aAEJlB,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAUW,QAAS9B,KAAKa,uBACpBK,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQH,QAAS,CAACgB,KAAMhB,EAAQiB,cAAeC,MAAOlB,EAAQqB,YACtDD,KAAM,SADd,gBAOZ,OACIlB,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAMoB,WAAS,EACTC,UAAU,MACVC,QAAQ,gBACRC,WAAW,SACX1B,QAAS,CAACuB,UAAWvB,EAAQ2B,kBAE/BzB,EAAAC,EAAAC,cAAA,OAAKwB,UAAW5B,EAAQ6B,eACpB3B,EAAAC,EAAAC,cAAA,KAAGwB,UAAY5B,EAAQ8B,QAASV,KAAMW,OAAOC,SAASZ,MAClDlB,EAAAC,EAAAC,cAAA,OAAKwB,UAAW5B,EAAQiC,SAAxB,UAMR/B,EAAAC,EAAAC,cAAA,OAAKwB,UAAW5B,EAAQkC,oBACpBhC,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQH,QAAS,CAACgB,KAAMhB,EAAQiB,cAAeC,MAAOlB,EAAQmB,gBAAiBC,KAAM,KAArF,QACAlB,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQH,QAAS,CAACgB,KAAMhB,EAAQiB,cAAeC,MAAOlB,EAAQmB,gBAAiBC,KAAM,KAArF,YACAlB,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQH,QAAS,CAACgB,KAAMhB,EAAQiB,cAAeC,MAAOlB,EAAQqB,YACtDD,KAAM,SADd,eAIJlB,EAAAC,EAAAC,cAAA,OAAKwB,UAAW5B,EAAQmC,oBACpBjC,EAAAC,EAAAC,cAACgC,EAAAjC,EAAD,CAAYkC,gBAAc,OAAOvB,QAAS9B,KAAKI,qBAAsBkD,MAAM,WACvEpC,EAAAC,EAAAC,cAACmC,EAAApC,EAAD,QAGPF,UAjFIuC,aAyFLC,uBA/ID,SAAAC,GAAK,MAAK,CACrBT,QAAQ,CACJU,MAAO,QACPC,OAAQ,QAEZjB,gBAAgB7C,OAAA+D,EAAA,EAAA/D,CAAA,CACZ6D,MAAO,MACPG,OAAQ,OACRF,OAAQ,SACPF,EAAMK,YAAYC,GAAG,MAAQ,CAC1BL,MAAO,QAGfd,cAAc,GAGdM,mBAAmBrD,OAAA+D,EAAA,EAAA/D,CAAA,CACfmE,QAAS,QACRP,EAAMK,YAAYC,GAAG,MAAQ,CAC1BC,QAAS,SAGjBnB,QAAQ,CACJoB,SAAU,OACVC,aAAc,QACdF,QAAS,eACTG,eAAgB,QAEpBlB,mBAAmBpD,OAAA+D,EAAA,EAAA/D,CAAA,CACfmE,QAAS,QACRP,EAAMK,YAAYC,GAAG,MAAQ,CAC1BC,QAAS,SAGjBhC,cAAc,CACV0B,MAAO,QACPC,OAAQ,OACRS,YAAa,MACbC,YAAa,eAEjBnC,eAAe,CACXoC,WAAY,UACZC,WAAY,MACZN,SAAU,OACVO,WAAY,QAEhBpC,WAAW,CACPkC,WAAY,UACZL,SAAU,OACVO,WAAY,OACZD,WAAY,SA6Fe,CAACE,WAAW,GAA/BjB,CAAsC9D,GCxJzCgF,EAAY5B,OAAOC,SAAS4B,SAAW,KAAO7B,OAAOC,SAAS6B,KAAO,UCe5EC,mLAGM,IACG9D,EAAWhB,KAAKJ,MAAhBoB,QACP,OACIE,EAAAC,EAAAC,cAAA,OAAKwB,UAAW5B,EAAQ+D,gBACpB7D,EAAAC,EAAAC,cAAA,OAAKwB,UAAW5B,EAAQgE,mBAPdxB,aAeVC,uBA3BD,SAAAC,GAAK,MAAK,CACrBqB,eAAe,CACXpB,MAAO,QAEXqB,SAAS,CACLC,gBAAe,OAAAC,OAASP,EAAT,aACfhB,MAAO,OACPC,OAAQ,QACRuB,eAAgB,WAmBW,CAACT,WAAW,GAA/BjB,CAAsCqB,sECMhDM,6MACFC,SAAU,WACNxF,EAAKyF,cAAcC,SAAS5D,2FAI5B6D,SAASC,uBAAuB,sBAAsB,GAAGC,MAAMzB,QAAU,wCAKrE,IAAA0B,EAAA3F,KACGgB,EAAWhB,KAAKJ,MAAhBoB,QACP,OACIE,EAAAC,EAAAC,cAACwE,EAAAzE,EAAD,CAAkB0E,GAAI,QAClB3E,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CACIoB,WAAS,EACTC,UAAU,SACVC,QAAQ,SACRC,WAAW,UAEXxB,EAAAC,EAAAC,cAAA,OAAKsE,MAAO,CAAC9B,OAAO,WACpB1C,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CAAQH,QAAS,CAACgB,KAAMhB,EAAQ8E,eAAgB5D,MAAOlB,EAAQ+E,iBACvD3D,KAAM,IACN4D,QAAS,YACTlE,QAAS9B,KAAKqF,UAHtB,aAIQnE,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,CAAM+E,KAAMC,IACNC,KAAM,IACN9C,MAAO,OACPV,UAAY5B,EAAQqF,YAGlCnF,EAAAC,EAAAC,cAAA,OAAKsE,MAAO,CAAC9B,OAAO,YACpB1C,EAAAC,EAAAC,cAACkF,EAAA,mBAAD,CAAoBC,OAAK,EAACC,IAAK,sCACXC,UAAU,EACVC,IAAK,SAAAC,GACDhB,EAAKL,cAAgBqB,GAEzBC,aAAW,EACXC,YAAU,EACVC,WAAW,MACXpB,MAAO,CAAEqB,IAAK,gBAzCnCvD,aAkDHC,uBA3ED,SAAAC,GAAK,MAAI,CACpBsD,YAAY,CACRzC,WAAY,UACZT,OAAQ,aAEZgC,eAAe,CACXmB,aAAc,OACdC,gBAAiBC,IAAK,KACtBC,UAAW,CACPF,gBAAiBC,IAAK,MAE1B7D,MAAO,OACPkB,WAAY,OAEhBuB,gBAAgB,CACZ7B,SAAU,OACVK,WAAY,UACZE,WAAY,OACZD,WAAY,OAEhB6B,SAAS,CACLgB,WAAY,UAsDe,CAAC3C,WAAW,GAA/BjB,CAAsC2B,GClEhDkC,mLACO,IACEtG,EAAWhB,KAAKJ,MAAhBoB,QACP,OACIE,EAAAC,EAAAC,cAACkB,EAAAnB,EAAD,CAAMoB,WAAS,EAACgF,QAAS,EAAGvG,QAAS,CAACuB,UAAWvB,EAAQwG,OACrDtG,EAAAC,EAAAC,cAACqG,EAAD,MACAvG,EAAAC,EAAAC,cAACsG,EAAD,MACAxG,EAAAC,EAAAC,cAACuG,EAAD,cAPEnE,aAcFC,uBA1BD,SAAAC,GAAK,MAAK,CACrB8D,KAAK,CACD7D,MAAO,QAEXiE,OAAO,CACHjE,MAAO,OAEXkE,SAAS,KAmBsB,CAACnD,WAAW,GAA/BjB,CAAsC6D,GCtBlCQ,QACW,cAA7B/E,OAAOC,SAAS+E,UAEe,UAA7BhF,OAAOC,SAAS+E,UAEhBhF,OAAOC,SAAS+E,SAASC,MACvB,2DCZNC,IAASC,OAAOhH,EAAAC,EAAAC,cAAC+G,EAAD,MAAS3C,SAAS4C,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.ea464d29.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport {withStyles} from \"@material-ui/core/styles/index\";\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport IconButton from '@material-ui/core/IconButton';\n\nconst styles = theme => ({\n    logoBox:{\n        width: '200px',\n        height: '57px'\n    },\n    navBarContainer: {\n        width: '90%',\n        margin: 'auto',\n        height: '110px',\n        [theme.breakpoints.up('md')]: {\n            width: '70%',\n        },\n    },\n    logoContainer:{\n\n    },\n    navBarButtonMobile:{\n        display: 'flex',\n        [theme.breakpoints.up('md')]: {\n            display: 'none',\n        }\n    },\n    navLogo:{\n        fontSize: '26px',\n        marginBottom: '-10px',\n        display: 'inline-block',\n        textDecoration: 'none',\n    },\n    navButtonContainer:{\n        display: 'none',\n        [theme.breakpoints.up('md')]: {\n            display: 'flex',\n        },\n    },\n    navButtonRoot:{\n        width: '155px',\n        height: '25px',\n        borderWidth: '2px',\n        borderColor: 'transparent',\n    },\n    navButtonLabel:{\n        fontFamily: 'raleway',\n        fontWeight: '400',\n        fontSize: '12px',\n        lineHeight: '25px'\n    },\n    formButton:{\n        fontFamily: 'raleway',\n        fontSize: '12px',\n        lineHeight: '25px',\n        fontWeight: '700',\n    }\n});\n\nclass NavBar extends Component{\n\n    constructor(props){\n        super(props);\n        this.state = {\n            trackerType: 'Crime',\n            mobileMenuOpen: false,\n            menuAnchor: null\n        }\n    }\n\n    handleMobileMenuOpen = (event) =>{\n        // temp help to locally store the event object, which is the SyntheticEvent\n        let temp = event.currentTarget;\n        this.setState(prev=>({\n            ...prev,\n            mobileMenuOpen: true,\n            menuAnchor: temp\n        }))\n    };\n\n    handleMobileMenuClose = () =>{\n        this.setState(prev=>({\n            ...prev,\n            mobileMenuOpen: false,\n            menuAnchor: null\n        }))\n    };\n\n    render(){\n        const {classes} = this.props;\n        const typeformURL = \"https://haochen633226.typeform.com/to/S86bK0\";\n        const mobileMenu = (\n            <Menu\n                anchorEl={this.state.menuAnchor}\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\n                open={this.state.mobileMenuOpen}\n                onClose={this.handleMobileMenuClose}\n            >\n                <MenuItem onClick={this.handleMobileMenuClose}>\n                    <Button classes={{root: classes.navButtonRoot, label: classes.navButtonLabel}} href={'#'}>HOME</Button>\n                </MenuItem>\n                <MenuItem onClick={this.handleMobileMenuClose}>\n                    <Button classes={{root: classes.navButtonRoot, label: classes.navButtonLabel}} href={'#'}>ABOUT US</Button>\n                </MenuItem>\n                <MenuItem onClick={this.handleMobileMenuClose}>\n                    <Button classes={{root: classes.navButtonRoot, label: classes.formButton}}\n                            href={'#body'}\n                    >LETS START</Button>\n                </MenuItem>\n            </Menu>\n        );\n\n        return(\n            <Grid container\n                  direction=\"row\"\n                  justify=\"space-between\"\n                  alignItems=\"center\"\n                  classes={{container: classes.navBarContainer}}\n            >\n                <div className={classes.logoContainer}>\n                    <a className= {classes.navLogo} href={window.location.href}>\n                        <div className={classes.logoBox}>\n                            LOGO\n                        </div>\n                    </a>\n                </div>\n\n                <div className={classes.navButtonContainer}>\n                    <Button classes={{root: classes.navButtonRoot, label: classes.navButtonLabel}} href={'#'}>HOME</Button>\n                    <Button classes={{root: classes.navButtonRoot, label: classes.navButtonLabel}} href={'#'}>ABOUT US</Button>\n                    <Button classes={{root: classes.navButtonRoot, label: classes.formButton}}\n                            href={'#body'}\n                    >LETS START</Button>\n                </div>\n                <div className={classes.navBarButtonMobile}>\n                    <IconButton aria-haspopup=\"true\" onClick={this.handleMobileMenuOpen} color=\"inherit\">\n                        <MenuIcon/>\n                    </IconButton>\n                </div>\n                {mobileMenu}\n\n            </Grid>\n        );\n    }\n}\n\n\nexport default (withStyles(styles, {withTheme: true})(NavBar));","export const IMAGE_URL = window.location.protocol + '//' + window.location.host + \"/images\";","import React, {Component} from 'react';\nimport {withStyles} from \"@material-ui/core/styles/index\";\nimport {IMAGE_URL} from \"../config/constants\";\nconst styles = theme => ({\n    imageContainer:{\n        width: '100%'\n    },\n    imageBox:{\n        backgroundImage: `url(${IMAGE_URL}/bg1.jpg)`,\n        width: '100%',\n        height: '408px',\n        backgroundSize: 'cover',\n    }\n});\n\nclass ImageSlider extends Component{\n\n\n    render(){\n        const {classes} = this.props;\n        return(\n            <div className={classes.imageContainer}>\n                <div className={classes.imageBox}>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default (withStyles(styles, {withTheme: true})(ImageSlider));","import React, { Component } from 'react';\nimport '../styles/App.css';\nimport Grid from '@material-ui/core/Grid';\nimport {withStyles} from \"@material-ui/core/styles/index\";\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Icon from '@mdi/react';\nimport pink from '@material-ui/core/colors/pink';\nimport {mdiLink} from \"@mdi/js\"\nimport { ReactTypeformEmbed } from 'react-typeform-embed';\nimport ScrollableAnchor from 'react-scrollable-anchor'\nconst styles = theme =>({\n    placeholder:{\n        fontFamily: 'raleway',\n        margin: '20px 20px'\n    },\n    formButtonRoot:{\n        borderRadius: '10px',\n        backgroundColor: pink[600],\n        '&:hover': {\n            backgroundColor: pink[800],\n        },\n        color: '#fff',\n        fontWeight: '700',\n    },\n    formButtonLabel:{\n        fontSize: '20px',\n        fontFamily: 'raleway',\n        lineHeight: '25px',\n        fontWeight: '700',\n    },\n    linkIcon:{\n        marginLeft: '10px',\n    }\n});\n\nclass Body extends Component{\n    openForm =()=>{\n        this.typeformEmbed.typeform.open();\n    };\n\n    componentDidMount(){\n        document.getElementsByClassName('ReactTypeformEmbed')[0].style.display = 'none';\n        // console.log(this.typeformEmbed);\n        // this.typeformEmbed.typeform.close();\n    }\n\n    render(){\n        const {classes} = this.props;\n        return(\n            <ScrollableAnchor id={'body'}>\n                <Grid\n                    container\n                    direction=\"column\"\n                    justify=\"center\"\n                    alignItems=\"center\"\n                >\n                    <div style={{height:'100px'}}/>\n                    <Button classes={{root: classes.formButtonRoot, label: classes.formButtonLabel}}\n                            href={'#'}\n                            variant={'contained'}\n                            onClick={this.openForm}>Let's Link\n                            <Icon path={mdiLink}\n                                  size={1.5}\n                                  color={'#fff'}\n                                  className ={classes.linkIcon}\n                            />\n                    </Button>\n                    <div style={{height:'1000px'}}/>\n                    <ReactTypeformEmbed popup url={\"https://demo.typeform.com/to/njdbt5\"}\n                                        autoOpen={false}\n                                        ref={tf => {\n                                            this.typeformEmbed = tf;\n                                        }}\n                                        hideHeaders\n                                        hideFooter\n                                        buttonText=\"Go!\"\n                                        style={{ top: 100 }}\n                    />\n                </Grid>\n            </ScrollableAnchor>\n        );\n    }\n}\n\n\nexport default (withStyles(styles, {withTheme: true})(Body));","import React, { Component } from 'react';\nimport '../styles/App.css';\nimport Grid from '@material-ui/core/Grid';\nimport NavBar from '../components/Navbar';\nimport ImageSlider from '../components/ImageSlider'\nimport Body from '../components/Body'\nimport {withStyles} from \"@material-ui/core/styles/index\";\n\nconst styles = theme => ({\n    body:{\n        width: '100%'\n    },\n    navBar:{\n        width: '70%'\n    },\n    themeBar:{\n\n    }\n});\n\nclass App extends Component {\n    render() {\n        const {classes} = this.props;\n        return (\n            <Grid container spacing={0} classes={{container: classes.body}}>\n                <NavBar/>\n                <ImageSlider/>\n                <Body/>\n\n            </Grid>\n        );\n    }\n}\n\nexport default (withStyles(styles, {withTheme: true})(App));","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}